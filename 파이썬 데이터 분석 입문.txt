2023-07-25
Intro
수업준비
수업을 들으면서 실시간 타이핑을 통해 실습 진행
수업이 끝나면 복습
나만의 강의 노트 만들기
Q&A 활용

수정메뉴에서 모든 출력 지우기
코랩 코드창에서 코드 텍스트 버튼을 이용하여 삽입

01-01
MATLAB, R과 같은 도메인 특화 언어와 Java, C같은 범용 언어의 장점을 고루 갖춤
통계, 머신러닝, 자연어, 이미지, 시각화 등을 포함한 풍부한 라이브러리를 지님
인공지능 개발, 웹과 앱 그리고 게임 제작, 핀테크 및 블록체인 구현으로 활용
브라우저 기반의 인터랙티브 프로그래밍 환경인 Jupyter Notebook으로 쉽게 구현

인간의 사고와 비슷하여 다른 언어에 비해 빠르게 배워 활용 가능
다른언어나 라이브러리에 쉽게 연동이 가능하다
파이썬을 배우고 필요한 라이브러리만 익힌다면 불가능한 일은 없다

Editor
 소스코드가 들어있는 파일을 편집할 수 있는 프로그래밍 툴
 Python은 편의성을 위해 별도의 에디터 프로그램을 설치하여 사용
Editor
 Pycharm 코드가 긴거
 Jupyter 한줄 한줄 해볼 때 Google Drive랑 연동된 colab이 있다. 
 VsCode
 Idle

02-01
변수 : 어떤 값을 담는 저장 공간과 그에 상응하는 이름
        영문자 혹은 _로 시작
        대소문자 구분
        숫자로 시작할 수 없음
        특수 문자는 사용할 수 없음
        변수 이름에 공백이 있으면 안 됨
        파이썬의 예약어는 사용할 수 없음

변수를 생성하면 변수의 메모리와 주소가 생성된다

순서 자료형
 숫자 type() 괄호안에 데이터타입을 알려주는 함수
 문자열
 리스트 순서를 가지는 python 객체의 집합
 튜플 순서를 가지는 python 객체의 집합

비순서 자료형
 딕셔너리 key와 value값을 가지고 key값으로 value값을 부른다
 집합 중복이 없고 순서를 가지지 않는 객체의 집합
 불 참거짓

연산자
 나머지 % 
 몫 // 
 제곱연산자 **

abs() 절댓값출력
pow() 제곱출력

02-02
문자열 만들기
 큰 따옴표로 문자열 만들기
 작은 따옴표로 문자열 만들기

이스케이프 문자
 출력물을 보기 좋게 만드는 용도
 \\역슬레시
 \' 작은 따옴표
 \"큰 따옴표

인덱싱
 문자열 내부의 문자 하나를 선택하는 연산자
 문자 선택 연산자([])
 대괄호 안에는 선택할 문자의 위치를 지정하며 이숫자를 인덱스라고 부름
 문자열[인덱스]로 호출

슬라이싱
 문자열의 특정 범위를 선택할 때 사용하는 연산자
 문자열 범위 선택 연산자[:]
 문자열 인덱스[인덱스1:인덱스2]로 호출

02-03
포멧팅
 문자열 안에 어떤 값을 삽입 하는 방법
 
%연산자 포맷팅
  문자열 포맷코드에 맞춰 바로 숫자와 문자를 대입할 때 사용
    정수 대입 : %d
    실수 대입 : %f
    문자 1개 대입 : %c
    문자열 대입 : %s

  format() 함수 포멧팅
    중괄호{}를 포함한 문자열 뒤에 도트(.)를 찍고 format() 함수 사용
    중괄호 개수와 format() 함수 괄호 안의 매개변수 개수는 동일
    함수를 사용하면 문자열의 {}기호가 format() 함수 괄호 안에 있는 매개변수로 차례로 대치

관련함수
  len(x) : 문자열 길이 출력
  split() : 문자열 나누기
  count(x) : 문자 개수 세기
  replace('a','b') : 문자열 바꾸기
  find('a') : 위치 알려주기
  upper() : 소문자를 대문자로 바꾸기
  lower() : 대문자를 소문자로 바꾸기
  join(x) : 문자열 삽입  

02-04
List자료형
  '여러 자료형'들을 모아서 사용할 수 있는 형태의 자료
  여러자료형을 담을 수 있고 여러 요소를 하나의 변수로 사용하고 싶을 때 사용

리스트 선언
  대괄호에 자료를 쉼표로 구분하여 입력
  대괄호 내부에 넣는 자료를 요소라고 부르며 element라고 명칭

인덱싱과 슬라이싱
  리스트 기호인 대괄호 안에 들어가는 숫자를 인덱스 라고 부름
인덱싱
  문자열 내부의 문자 하나를 선택하는 연산자
슬라이싱 [:]
  문자열의 특정 범위를 선택할 때 사용하는 연산자
관련함수 
  sort() : 리스트 정렬
  reverse() : 리스트 뒤집기
  append(x) : 리스트에 요소 추가
  extend(x) : 리스트 확장
  insert(a, b) : 리스트 요소 삽입, 리스트 a번째 위치에 b를 삽입
  remove(x) : 리스트 요소 제거
  pop() : 리스트 요소 끄집어내기
  count(x) : 리스트에 포함된 요소 x의 개수 세기
 
02-05
튜플
  튜플은()로 생성
  "수정, 추가, 삭제가 불가능 하다"
  수정해서는 안되는 값을 저장할 때 사용
튜플 생성
  괄호 있는 튜플
    (데이터,데이터,데이터,....) 형태로 생성
    한개의 값을 가질 때는 마지막에","를 써줘야 함
  괄호 없는 튜플
    괄호를 생략해도 튜플로 인식할 수 있음
인덱싱과 슬라이싱 연산
  리스트와 동일하다

변경과 삭제는 불가능 하다.

02-06
딕셔너리 선언
  딕셔너리는 { }로 선언하며 키 : 값 형태를 쉼표로 연결하여 생성
  키는 문자열 숫자 불등으로 선언
변경과 삭제
  가능
관련함수 
  keys() : key리스트 만들기
  values() : value리스트 만들기
  items() : key, value 쌍얻기
  get() : key로 value 얻기
  in() : 해당 key가 딕셔너리 안에 있는지 조사
  clear() : key:value 쌍 모두 지우기
02-07
집합
  set키워드를 통해 생성
    set 괄호 안에 리스트 입력
    set 괄호 안에 문자열 입력
  중복을 허용하지 않음 - 중복된 원소가 있다면 하나만 나온다
  비순서 자료형
  순서를 사용하고 싶다면 리스트나 튜플로 변환하여 사용
합집합 : |
교집합 : &
차집합 : -


