01-03
인코딩 = 코드화 = 암호화 = 부호화
컴퓨터에서 인코딩은 동영상이나 문자 인코딩 뿐 아니라 사람이 인지할 수 있는 
형태의 데이터를 약속된 규칙에 의해 컴퓨터가 사용하는 0과 1로 변환하는 과정을 통틀어 말합니다
'ASCII', 'URL인코딩', 'HTML인코딩', 'Base64인코딩', '유니코드 인코딩'등이 존재

디코딩 = 역코드화 = 복호화
사람이 읽을 수 있는 언어로 다시 돌려준다

소스코드의 인코딩 디코딩
소스 코드 파일이 현재 어떤 방식으로 인코딩되었지 명시하는 방법
파이썬 셀이 아닌 편집기로 코딩할때는 소스코드의 인코딩이 매우 중요
Python 2.X 버전은 ascii가 기본 인코딩 방식
Python 3.0 부터는 utf-8이 기본 인코딩 방식

01-04
클로저 Closure
함수 안의 함수를 결과로 반환할 때, 그 내부 함수를 클로저라고 한다.
 콜백함수, 함수의 순차적 실행, 데코레이터 함수에서 사용된다.

방법1 클래스 사용하기
방법2 클로저 사용하기

데코레이터 
 함수를 인수로 받는 클로저
 @를 이용한 어노테이션으로 사용
사용되는곳 
 반복되는 작업을 여러 함수에 적용할 경우
 기존 함수를 수정하지 않고 추가기능을 사용하려고 할 경우

01-05
이터레이터(iterator)
  집합에서 값을 차례대로 꺼낼 수 있는 객체를 말합니다.
  for문을 순회할 수 있는 객체
 사용이유?
   숫자가 아주 많을 경우 미리 만들어 놓는 것 보다
   그때 그때 필요할 때 값을 뽑아 사용하고 싶을 경우가 대부분의 상황에서 효율적
 반복가능 객체에만 사용가능
   iter()로 반복 가능 객체 변환
   next() 로 다음값 뽑기
  한번 반복하면 다시 사용될 수 없음
다시사용하고 싶다면 iterator를 다시 정의 해줘야 한다

제네레이터(Generator)
  이터레이터를 생성해주는 함수
  함수가 하나의 고정된 값을 반환하는 것이 아닌 순차적으로 다른 값을 반환하기 원할 때 사용한다

01-06
변수 타입 어노테이션
어떤 타입의 값이 저장될 것인지를 직접 알려주는 방법
변수 타입이 맞지 않으면 에러나 버그의 발생 가능성이 높아짐
코드 가독성과 협업 효율성이 높아짐

동적프로그래밍 언어
장점 
  타입에 자유로워 유연한 코딩이 가능하므로 쉽고 빠르게 프로그램을 만들수 있음
  타입체크를 위한 코드가 없으므로 비교적 깔끔한 소스코드
단점 
  프로젝트 규모가 커질수록 잘못된 타입 사용으로 버그가 생길 확률 높아짐
  타입 어노테이션이 없을 시 다른 정적프로그래밍 언어와 타입 버그 발생 시 원인 찾기 어려움
  실행속도가 느림

01-07
문자열 처리
str()과 repr()함수
		str()			repr()
성격		비공식적인 문자열 출력	공식적인 문자열을 출력	
사용목적		사용자가 보기 쉽도록 	문자열로 객체를 다시 생성
누구를 위해	프로그램 사용자 		프로그램 개발자

eval( ) 문자열을 객체로 변환

01-08
외부 라이브러리 다루기
1. pycharm 패키지 매니저 사용
2. pip 패키지 매니저




